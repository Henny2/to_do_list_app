:root {
    --clr-primary: rgb(54, 112, 199);
    --clr-light: #f4f4f4;
    --clr-dark: #333;
    --clr-warning: rgb(99, 36, 36);
}

/* watch video on rem and em difference */

*,
*::before,
*::after {
    font-family: inherit;
    box-sizing: border-box;
}

body {
    margin: 0;
    font-family: "Work Sans", sans-serif;
    font-weight: 300;
    font-size: 1.5rem;
    background-color: var(--clr-primary);
    color: var(--clr-light);

    display: grid;

    grid:
        /* this is for the first row, split into 4 columns, all used for header, auto is for the height of the row */
        "header header header header" auto
        /* this is the second row, the dots show empty columns, height is auto, the slash symbolizes that columns are next */
        "...... lists  active ....." auto /
        /* how big is each column as we look down on them? see below. */
        /* 1fr = one fraction, just uses the available space, fr = whatever is left over - 1fr means they will have the same size (left and right),
        minmax gives you a min and max space setting*/
        1fr minmax(100px, 300px) minmax(250px, 500px) 1fr
}

.title {
    grid-area: header;
    text-align: center;
    font-size: calc(7vw + 2rem);
    font-weight: 900;
    color: rgba(0, 0, 0, .1);
    letter-spacing: 1px;
    margin: -.1em 0 0 0.5em;
}

.all-tasks {
    grid-area: lists;
}

.task-list {
    /* could also use margins on line items but this is cleaner */
    line-height: 1.7;
    font-size: 1.2rem;
    list-style: circle;
    padding-left: 1.1em;
}

.list-name {
    cursor: pointer;
}

.list-name:hover {
    opacity: .7;
}

form {
    /* to change order in which button and input appear visually */
    display: flex;
}

.btn {
    cursor: pointer;
    background: 0;
    border: 0;
    padding: 0;
    color: inherit;
}

.btn.create {
    font-size: 1.5rem;
    font-weight: 900;
    margin-right: .25em;
    transition: opactiy 250ms ease-in;
}

.btn.create:hover {
    opacity: .7;
}

.active-list {
    font-weight: 700;
}

/* "new" goes for both forms */
.new {
    background: transparent;
    border: 0;
    color: inherit;
    border-bottom: 1px solid currentColor;
    font-size: inherit;
    /* to show the user that they clicked into the input box */
    outline: none;
    transition: border-bottom 150ms ease-in;
    /* Together with display:flex. Order property: items are placed in the visual order according to that integer, lowest values first.  */
    order: 2;
}

/* to show the user that they clicked into the input box, we thicken the line and drop the opacity of the placeholder */
.new:focus {
    border-bottom-width: 3px;
}

.new:focus::placeholder {
    opacity: 0.4;
}

.new.list {
    font-size: 1.1rem;
}

.todo-list {
    /* you can create local variables also within sub sections/not jsut at the root */
    --spacer: 2rem;
    grid-area: active;
    background: var(--clr-light);
    color: var(--clr-dark);


}

.todo-header {
    background: #e4e4e4;
    padding: var(--spacer);
    display: flex;
    align-items: center;
    justify-content: space-between;
}


.list-title {
    margin: 0 1em 0 0;
}

.task-count {
    margin: 0;
    font-size: 1rem;
}

.todo-body {
    padding: var(--spacer);
}

/* hiding check boxes */
/* this way you can still tab through and select them */
/* in contrast to if you would use display:none */
[type='checkbox'] {
    opacity: 0;
    position: absolute;
}

.task label {
    display: flex;
    align-items: center;
    position: relative;
    margin-bottom: 1.25em;
}

.task label::after {
    content: "";
    position: absolute;
    right: 0;
    left: 0;
    bottom: -50%;
    height: 2px;
    background: currentColor;
    opacity: .1;
}

.custom-checkbox {
    --size: .75em;
    display: inline-block;
    width: var(--size);
    height: var(--size);
    cursor: pointer;
    margin-right: var(--size);
    border: 2px solid currentColor;
    border-radius: 50%;
}

/* stopped at  41:00 */
/* https://www.youtube.com/watch?v=IhmSidOJSeE */